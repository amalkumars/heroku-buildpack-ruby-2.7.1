#!/usr/bin/env bash

# Downloads a bootstrap copy of Ruby for execution of the buildpack
# this is needed so we can totally control the Ruby version and are
# not dependant on the Ruby version of the stack image

# fail hard
set -o pipefail
# fail harder
set -eu

BIN_DIR=$1
RUBY_BOOTSTRAP_DIR=$2

# Stack is set by codon, listed here so shellcheck knows about it
STACK=${STACK:-}

curl_retry_on_18() {
  local ec=18;
  local attempts=0;
  while (( ec == 18 && attempts++ < 3 )); do
    curl "$@" # -C - would return code 33 if unsupported by server
    ec=$?
  done
  return $ec
}

ruby_url() {
  local stack=$1
  local version=$2

  # To download Ruby 2.7.1 from heroku-20 stack:
  echo "${BUILDPACK_VENDOR_URL:-https://heroku-buildpack-ruby.s3.us-east-1.amazonaws.com}/heroku-20/ruby-$version.tgz"

  # if [ "$stack" == "heroku-24" ]; then
  #   local arch
  #   arch=$(dpkg --print-architecture)
  #   echo "${BUILDPACK_VENDOR_URL:-https://heroku-buildpack-ruby.s3.us-east-1.amazonaws.com}/$stack/$arch/ruby-$version.tgz"
  # else
  #   echo "${BUILDPACK_VENDOR_URL:-https://heroku-buildpack-ruby.s3.us-east-1.amazonaws.com}/$stack/ruby-$version.tgz"
  # fi
}

# Pull ruby version out of buildpack.toml to be used with bootstrapping
regex=".*ruby_version = [\'\"]([0-9]+\.[0-9]+\.[0-9]+)[\'\"].*"
if [[ $(cat "$BIN_DIR/../buildpack.toml") =~ $regex ]]
  then
    heroku_buildpack_ruby_url=$(ruby_url "$STACK" "${BASH_REMATCH[1]}")
  else
    heroku_buildpack_ruby_url=""
    echo "Could not detect ruby version to bootstrap"
    exit 1
fi

mkdir -p "$RUBY_BOOTSTRAP_DIR"

# # Debugging information
# echo "3333333333> Downloading Ruby from: $heroku_buildpack_ruby_url"
# echo "3333333333> Saving to: $RUBY_BOOTSTRAP_DIR"


curl_retry_on_18 --fail --retry 3 --retry-connrefused --connect-timeout "${CURL_CONNECT_TIMEOUT:-3}" --silent --location -o "$RUBY_BOOTSTRAP_DIR/ruby.tgz" "$heroku_buildpack_ruby_url" || {
cat<<EOF
  Failed to download a Ruby executable for bootstrapping!

  This is most likely a temporary internal error. If the problem
  persists, make sure that you are not running a custom or forked
  version of the Heroku Ruby buildpack which may need updating.

  url: $heroku_buildpack_ruby_url
EOF
  exit 1
}

# Print contents of the directory after download
# echo "Contents of $RUBY_BOOTSTRAP_DIR after download:"
# ls -l "$RUBY_BOOTSTRAP_DIR"

tar xzf "$RUBY_BOOTSTRAP_DIR/ruby.tgz" -C "$RUBY_BOOTSTRAP_DIR"

# Attempt to run the Ruby executable and capture the output
# echo "3333333333> Attempting to run the Ruby executable:"
# "$RUBY_BOOTSTRAP_DIR/bin/ruby" -v 2>&1 || {
#   echo "Failed to execute the Ruby executable"
#   exit 1
# }
